# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sinkzone < Formula
  desc "A strict DNS filter to help you stay focused â€” or keep your kids safe"
  homepage "https://github.com/berbyte/sinkzone"
  version "0.0.51"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.51/sinkzone-darwin-amd64"
      sha256 "e2e0e6a4f8183a8620eaaa5058ccb19ece93e147b249b614ac897af4b8a48b71"

      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.51/sinkzone-darwin-arm64"
      sha256 "fc39e3eb2b9abd0d81a8c120955719e5ccd6d9b2f7c73e1d1dde022b60df9cb2"

      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.51/sinkzone-linux-amd64"
      sha256 "d6d939cdfa4bc9ed643ae3be2a2dfd5c27625f45ced7f0251268117e51f1a7a7"
      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.51/sinkzone-linux-arm64"
      sha256 "fffadb2f17a8153f42e55daca4cb56c453be304af430a608b8a3583661dff72f"
      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
  end
end
