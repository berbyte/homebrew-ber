# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sinkzone < Formula
  desc "A strict DNS filter to help you stay focused â€” or keep your kids safe"
  homepage "https://github.com/berbyte/sinkzone"
  version "0.0.52"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.52/sinkzone-darwin-amd64"
      sha256 "4287db1037d83eadb2f34bd0f92cfac0dd459fa047847d2199af4d9d71acdba5"

      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.52/sinkzone-darwin-arm64"
      sha256 "77f872a9c06c815edf91e467eea13dd65e5f2c36e6349fb8c726939b3e3a3aea"

      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.52/sinkzone-linux-amd64"
      sha256 "96d8805e741e7c7ed3649b411dee3e5c91b1cd091e5c632542652c8a1140b195"
      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.52/sinkzone-linux-arm64"
      sha256 "6fb3517b0177436670c61601f88adefba127a60cf975937e3b97aeaf596fa78a"
      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "--shell", "bash"
        system bin/"sinkzone", "completion", "--shell", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
  end
end
