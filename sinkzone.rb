# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sinkzone < Formula
  desc "A strict DNS filter to help you stay focused â€” or keep your kids safe"
  homepage "https://github.com/berbyte/sinkzone"
  version "0.0.53"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.53/sinkzone-darwin-amd64"
      sha256 "aca884066166ea8948b96777775ebb57a792308cd5d934181173560885739e47"

      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "bash"
        system bin/"sinkzone", "completion", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.53/sinkzone-darwin-arm64"
      sha256 "e42423c01aeba29c416174d048a19fa4c3a2244a1e63768f26a149174cf673ef"

      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "bash"
        system bin/"sinkzone", "completion", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.53/sinkzone-linux-amd64"
      sha256 "3ea8aebe3f92791274ef4aaa04486cab1d1f19ec5b56ce451516f92c973e7a05"
      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "bash"
        system bin/"sinkzone", "completion", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/berbyte/sinkzone/releases/download/v0.0.53/sinkzone-linux-arm64"
      sha256 "80f4cd71674ad14e8b930dcc3cea12abd62a67354d77394599cb77b36ff4d294"
      def install
        bin.install "sinkzone"
        man1.install "docs/sinkzone.1"
        rm Dir["#{bin}/{sinkzone-completion.bash,sinkzone-completion.zsh}"]
        system bin/"sinkzone", "completion", "bash"
        system bin/"sinkzone", "completion", "zsh"
        bash_completion.install "sinkzone-completion.bash"
        zsh_completion.install "sinkzone-completion.zsh"
        (zsh_completion/"_sinkzone").write <<~EOS
          #compdef sinkzone
          _sinkzone () {
            local e
            e=$(dirname ${funcsourcetrace[1]%:*})/sinkzone-completion.zsh
            if [[ -f $e ]]; then source $e; fi
          }
        EOS
      end
    end
  end
end
